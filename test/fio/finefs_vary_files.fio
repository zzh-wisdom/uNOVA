# 顺序写文件，每个线程单独一个文件

[global]
; 目录需要事先存在
directory=/tmp/finefs
direct=1
buffered=0
thread=1
cpus_allowed=25-39,60-79
cpus_allowed_policy=split
numa_cpu_nodes=1
numa_mem_policy=bind:1
kb_base=1024
; verify=md5
do_verify=1
create_fsync=1
# create_only=1
# 运行完负载后，删除文件
unlink=1
description=顺序写文件,单线程多文件,文件数变化
time_based
runtime=30
numjobs=1
# overwrite=1
# ioengine=sync
ioengine=ftruncate
rw=write
bs=64B
# 这个大小会在多个文件中平均分，如果没指定filesize
size=3G
# filesize=1G
file_service_type=roundrobin
# io个数
# number_ios=1000000
group_reporting

[ftruncate-1]
wait_for_previous
nrfiles=1

# [ftruncate-2]
# wait_for_previous
# nrfiles=2

# [ftruncate-5]
# wait_for_previous
# nrfiles=5

# [ftruncate-8]
# wait_for_previous
# nrfiles=8

# [ftruncate-10]
# wait_for_previous
# nrfiles=10

# [ftruncate-20]
# wait_for_previous
# nrfiles=20

# [ftruncate-23]
# wait_for_previous
# nrfiles=23

# [ftruncate-25]
# wait_for_previous
# nrfiles=25

# [ftruncate-26]
# wait_for_previous
# nrfiles=26

# [ftruncate-30]
# wait_for_previous
# nrfiles=30

# [ftruncate-50]
# wait_for_previous
# nrfiles=50

# [ftruncate-70]
# wait_for_previous
# nrfiles=70

# [ftruncate-90]
# wait_for_previous
# nrfiles=90

# [ftruncate-100]
# wait_for_previous
# nrfiles=100

# [ftruncate-120]
# wait_for_previous
# nrfiles=120

# [ftruncate-1000]
# wait_for_previous
# nrfiles=1000

# [ftruncate-10000]
# wait_for_previous
# nrfiles=10000
